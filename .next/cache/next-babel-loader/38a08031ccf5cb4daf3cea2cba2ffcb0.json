{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/pflaxalt/Repositories/experiments/covered-2020/web/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// Core\nimport React from \"react\";\nimport App from \"next/app\"; // Components\n\nimport { Layout } from \"../components/core/Layout\"; // Begin Component\n// __________________________________________________________________________________________\n\n/**\n *\n * /pages/_app_.js\n * @author Peter Laxalt\n * @description The wrapper around every page. This is the best place to load data and\n * @description store it in our React Context to be accessible anywhere, so we are doing\n * @description one call for all data at a time.\n *\n */\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps; // console.log(\"ðŸ‘€ this.props from _app: \", this.props);\n      // Render our App\n\n      return __jsx(Layout, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }), __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/pflaxalt/Repositories/experiments/covered-2020/web/pages/_app.tsx"],"names":["React","App","Layout","MyApp","props","Component","pageProps"],"mappings":";;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAA8B,UAA9B,C,CAEA;;AACA,SAASC,MAAT,QAAuB,2BAAvB,C,CAEA;AACA;;AAMA;;;;;;;;;IASMC,K;;;;;;;;;;;;;6BACK;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ,EAGP;AAEA;;AACA,aACE,MAAC,MAAD,eAAYA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKD;;;;EAZiBL,G;;AAepB,eAAeE,KAAf","sourcesContent":["// Core\nimport React from \"react\";\nimport App, { AppProps } from \"next/app\";\n\n// Components\nimport { Layout } from \"../components/core/Layout\";\n\n// Begin Component\n// __________________________________________________________________________________________\n\ntype LMNTS_CustomAppState = {};\n\ntype LMNTS_CustomAppData = AppProps & {};\n\n/**\n *\n * /pages/_app_.js\n * @author Peter Laxalt\n * @description The wrapper around every page. This is the best place to load data and\n * @description store it in our React Context to be accessible anywhere, so we are doing\n * @description one call for all data at a time.\n *\n */\nclass MyApp extends App<LMNTS_CustomAppData, LMNTS_CustomAppState> {\n  render() {\n    const { Component, pageProps } = this.props;\n\n    // console.log(\"ðŸ‘€ this.props from _app: \", this.props);\n\n    // Render our App\n    return (\n      <Layout {...pageProps}>\n        <Component {...pageProps} />\n      </Layout>\n    );\n  }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}